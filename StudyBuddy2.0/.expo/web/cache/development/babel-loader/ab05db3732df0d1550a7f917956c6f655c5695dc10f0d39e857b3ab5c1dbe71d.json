{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { useNavigation } from '@react-navigation/native';\nimport * as WebBrowser from \"expo-web-browser\";\nimport * as Google from \"expo-auth-session/providers/google\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nWebBrowser.maybeCompleteAuthSession();\nvar SignInScreen = function SignInScreen() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    token = _useState2[0],\n    setToken = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    userInfo = _useState4[0],\n    setUserInfo = _useState4[1];\n  var _Google$useAuthReques = Google.useAuthRequest({\n      androidClientId: \"508324923582-ncuan2li0la71d0oe8c317lg7l3d8g6d.apps.googleusercontent.com\",\n      iosClientId: \"508324923582-qtv5h7tf8eub87iett2ek12hu6nflpv2.apps.googleusercontent.com\",\n      webClientId: \"508324923582-colqt82dke17aa8n8n51msqric08j9sm.apps.googleusercontent.com\"\n    }),\n    _Google$useAuthReques2 = _slicedToArray(_Google$useAuthReques, 3),\n    request = _Google$useAuthReques2[0],\n    response = _Google$useAuthReques2[1],\n    promptAsync = _Google$useAuthReques2[2];\n  var navigation = useNavigation();\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    email = _useState6[0],\n    setEmail = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    password = _useState8[0],\n    setPassword = _useState8[1];\n  {}\n  return _jsx(ImageBackground, {\n    source: require(\"./images/SignUp.png\"),\n    style: styles.backgroundImage,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.header,\n        children: \"Sign In\"\n      }), _jsx(TextInput, {\n        placeholder: \"Email\",\n        value: email,\n        onChangeText: setEmail,\n        style: styles.input,\n        keyboardType: \"email-address\"\n      }), _jsx(TextInput, {\n        placeholder: \"Password\",\n        value: password,\n        onChangeText: setPassword,\n        style: styles.input,\n        secureTextEntry: true\n      }), _jsx(TouchableOpacity, {\n        style: styles.signinButton,\n        onPress: function onPress() {\n          return navigation.navigate('Home');\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Sign In\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.signUpGoogleButton,\n        onPress: function onPress() {\n          return navigation.navigate('Home');\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Sign Up with Google\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('SignUp');\n        },\n        children: _jsx(Text, {\n          style: styles.linkText,\n          children: \"Don't have an account? Sign up\"\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 120\n  },\n  header: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    color: 'white',\n    textDecorationLine: 'underline'\n  },\n  input: {\n    width: '100%',\n    borderWidth: 1,\n    borderColor: '#ddd',\n    padding: 10,\n    width: 250,\n    height: 60,\n    borderRadius: 5,\n    marginBottom: 10,\n    backgroundColor: 'white'\n  },\n  linkText: {\n    color: 'white',\n    marginTop: 20,\n    textDecorationLine: 'underline',\n    fontSize: 18\n  },\n  backgroundImage: {\n    flex: 1,\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center'\n  },\n  signinButton: {\n    backgroundColor: 'white',\n    padding: 10,\n    borderRadius: 5,\n    borderWidth: 2,\n    borderColor: 'white',\n    width: 100\n  },\n  buttonText: {\n    color: 'black',\n    textAlign: 'center',\n    fontSize: 20\n  },\n  signUpGoogleButton: {\n    backgroundColor: 'white',\n    padding: 1,\n    borderRadius: 5,\n    borderWidth: 2,\n    borderColor: 'white',\n    width: 150,\n    top: 10\n  }\n});\nexport default SignInScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","StyleSheet","TouchableOpacity","ImageBackground","useNavigation","WebBrowser","Google","AsyncStorage","jsx","_jsx","jsxs","_jsxs","maybeCompleteAuthSession","SignInScreen","_useState","_useState2","_slicedToArray","token","setToken","_useState3","_useState4","userInfo","setUserInfo","_Google$useAuthReques","useAuthRequest","androidClientId","iosClientId","webClientId","_Google$useAuthReques2","request","response","promptAsync","navigation","_useState5","_useState6","email","setEmail","_useState7","_useState8","password","setPassword","source","require","style","styles","backgroundImage","children","container","header","placeholder","value","onChangeText","input","keyboardType","secureTextEntry","signinButton","onPress","navigate","buttonText","signUpGoogleButton","linkText","create","flex","alignItems","justifyContent","padding","fontSize","fontWeight","marginBottom","color","textDecorationLine","width","borderWidth","borderColor","height","borderRadius","backgroundColor","marginTop","textAlign","top"],"sources":["C:/Users/Sisi/Documents/GitHub/StudyBuddy/StudyBuddy2.0/src/screens/SignInScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, Button, StyleSheet, TouchableOpacity, ImageBackground } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport * as WebBrowser from \"expo-web-browser\";\r\nimport * as Google from \"expo-auth-session/providers/google\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nWebBrowser.maybeCompleteAuthSession();\r\n\r\nconst SignInScreen = () => {\r\n  const [token, setToken] = useState(\"\");\r\n  const [userInfo, setUserInfo] = useState(null);\r\n\r\n  const [request, response, promptAsync] = Google.useAuthRequest({\r\n    androidClientId: \"508324923582-ncuan2li0la71d0oe8c317lg7l3d8g6d.apps.googleusercontent.com\",\r\n    iosClientId: \"508324923582-qtv5h7tf8eub87iett2ek12hu6nflpv2.apps.googleusercontent.com\",\r\n    webClientId: \"508324923582-colqt82dke17aa8n8n51msqric08j9sm.apps.googleusercontent.com\",\r\n  });\r\n  const navigation = useNavigation();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  {/*LOGIN STREAK BADGE -- CHECK LOGIN STREAK FUNCTION */}\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={require('./images/SignUp.png')} // Replace with your image path\r\n      style={styles.backgroundImage}\r\n    >\r\n    <View style={styles.container}>\r\n      <Text style={styles.header}>Sign In</Text>\r\n      <TextInput\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChangeText={setEmail}\r\n        style={styles.input}\r\n        keyboardType=\"email-address\"\r\n      />\r\n      <TextInput\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChangeText={setPassword}\r\n        style={styles.input}\r\n        secureTextEntry\r\n      />\r\n      <TouchableOpacity\r\n  style={styles.signinButton}\r\n  onPress={() => navigation.navigate('Home')}\r\n>\r\n  <Text style={styles.buttonText}>Sign In</Text>\r\n</TouchableOpacity>\r\n\r\n<TouchableOpacity\r\n  style={styles.signUpGoogleButton}\r\n  onPress={() => navigation.navigate('Home')}\r\n>\r\n  <Text style={styles.buttonText}>Sign Up with Google</Text>\r\n</TouchableOpacity>\r\n\r\n      {/* <Button title=\"Sign in\" onPress={handleSignIn} /> */}\r\n      <TouchableOpacity onPress={() => navigation.navigate('SignUp')}>\r\n        <Text style={styles.linkText}>Don't have an account? Sign up</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 120,\r\n  },\r\n  header: {\r\n    fontSize: 30,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n    color: 'white',\r\n    textDecorationLine: 'underline'\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    borderWidth: 1,\r\n    borderColor: '#ddd',\r\n    padding: 10,\r\n    width: 250,\r\n    height:60,\r\n    borderRadius: 5,\r\n    marginBottom: 10,\r\n    backgroundColor: 'white',\r\n  },\r\n  linkText: {\r\n    color: 'white',\r\n    marginTop: 20,\r\n    textDecorationLine: 'underline',\r\n    fontSize: 18,\r\n  },\r\n  backgroundImage: {\r\n    flex: 1,\r\n    width: '100%',\r\n    height: '100%',\r\n    justifyContent: 'center',\r\n  },\r\n  signinButton: {\r\n    backgroundColor: 'white',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    borderWidth: 2,\r\n    borderColor: 'white',\r\n    width: 100,\r\n  },\r\n  buttonText: {\r\n    color: 'black',\r\n    textAlign: 'center',\r\n    fontSize:20,\r\n    // You might want to set a specific font size or weight\r\n  },\r\n  signUpGoogleButton: {\r\n    backgroundColor: 'white',\r\n    padding: 1,\r\n    borderRadius: 5,\r\n    borderWidth: 2,\r\n    borderColor: 'white',\r\n    width: 150,\r\n    top: 10,\r\n  },\r\n});\r\n\r\nexport default SignInScreen;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}