{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nif (!global.messages) global.messages = [];\nvar MatchingScreen = function MatchingScreen() {\n  var navigation = useNavigation();\n  var _useState = useState([{\n      id: '1',\n      fullName: 'Jane Doe',\n      profilePic: 'https://via.placeholder.com/150',\n      classes: ['Biology 101', 'Chemistry 201'],\n      likes: ['Reading', 'Gardening'],\n      skills: ['Time Management', 'Organization'],\n      weaknesses: ['Public Speaking'],\n      strengths: ['Critical Thinking']\n    }, {\n      id: '2',\n      fullName: 'John Doe',\n      profilePic: 'https://via.placeholder.com/150',\n      classes: ['Chemistry 101', 'Software 201'],\n      likes: ['Reading', 'Gardening'],\n      skills: ['Time Management', 'Organization'],\n      weaknesses: ['Public Speaking'],\n      strengths: ['Critical Thinking']\n    }, {\n      id: '3',\n      fullName: 'Jym Doe',\n      profilePic: 'https://via.placeholder.com/150',\n      classes: ['Carpentry 101', 'Software 301'],\n      likes: ['Reading', 'Gardening'],\n      skills: ['Time Management', 'Organization'],\n      weaknesses: ['Public Speaking'],\n      strengths: ['Critical Thinking']\n    }]),\n    _useState2 = _slicedToArray(_useState, 2),\n    users = _useState2[0],\n    setUsers = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    searchQuery = _useState4[0],\n    setSearchQuery = _useState4[1];\n  var _useState5 = useState(new Set()),\n    _useState6 = _slicedToArray(_useState5, 2),\n    connectedUsers = _useState6[0],\n    setConnectedUsers = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    currentIndex = _useState8[0],\n    setCurrentIndex = _useState8[1];\n  var filteredUsers = searchQuery ? users.filter(function (user) {\n    return user.classes.some(function (classItem) {\n      return classItem.toLowerCase().includes(searchQuery.toLowerCase());\n    });\n  }) : users;\n  var currentUser = filteredUsers[currentIndex % filteredUsers.length];\n  var safeIndex = currentIndex % filteredUsers.length;\n  var handleConnection = function handleConnection(user) {\n    if (!connectedUsers.has(user.id)) {\n      setConnectedUsers(new Set([].concat(_toConsumableArray(connectedUsers), [user.id])));\n      global.messages.push({\n        id: user.id,\n        name: user.fullName,\n        lastMessage: `Connected with ${user.fullName}`\n      });\n      navigation.navigate('Messages');\n    } else {\n      alert(\"You're already connected with this user!\");\n    }\n  };\n  var prevUser = function prevUser() {\n    setCurrentIndex(function (prevIndex) {\n      return (prevIndex - 1 + filteredUsers.length) % filteredUsers.length;\n    });\n  };\n  var nextUser = function nextUser() {\n    setCurrentIndex(function (prevIndex) {\n      return (prevIndex + 1) % filteredUsers.length;\n    });\n  };\n  useEffect(function () {\n    console.log('Current user:', currentUser);\n    console.log('Connected users:', connectedUsers);\n  }, [currentUser, connectedUsers]);\n  {}\n  return _jsx(ImageBackground, {\n    source: require(\"./images/Matching.png\"),\n    style: styles.backgroundImage,\n    children: _jsxs(ScrollView, {\n      style: styles.container,\n      children: [_jsx(TextInput, {\n        style: styles.searchBar,\n        placeholder: \"Search for classes...\",\n        value: searchQuery,\n        onChangeText: function onChangeText(text) {\n          setSearchQuery(text);\n          setCurrentIndex(0);\n        }\n      }), currentUser && _jsxs(View, {\n        style: styles.profileCard,\n        children: [_jsx(Text, {\n          style: styles.fullName,\n          children: currentUser.fullName\n        }), _jsxs(View, {\n          style: styles.profileSection,\n          children: [_jsx(Image, {\n            source: {\n              uri: currentUser.profilePic\n            },\n            style: styles.profilePic\n          }), _jsxs(View, {\n            style: styles.userInfo,\n            children: [_jsxs(Text, {\n              style: styles.userStuff,\n              children: [\"Classes: \", currentUser.classes.join(', ')]\n            }), _jsxs(Text, {\n              style: styles.userStuff,\n              children: [\"Likes: \", currentUser.likes.join(', ')]\n            }), _jsxs(Text, {\n              style: styles.userStuff,\n              children: [\"Skills: \", currentUser.skills.join(', ')]\n            }), _jsxs(Text, {\n              style: styles.userStuff,\n              children: [\"Weaknesses: \", currentUser.weaknesses.join(', ')]\n            }), _jsxs(Text, {\n              style: styles.userStuff,\n              children: [\"Strengths: \", currentUser.strengths.join(', ')]\n            })]\n          })]\n        })]\n      }), filteredUsers.length > 1 && _jsxs(View, {\n        style: styles.navigation,\n        children: [_jsx(TouchableOpacity, {\n          onPress: prevUser,\n          children: _jsx(Ionicons, {\n            name: \"arrow-back-circle\",\n            size: 40,\n            color: \"#000\"\n          })\n        }), _jsx(View, {\n          style: styles.btnBackground,\n          children: _jsx(Button, {\n            title: \"Connect\",\n            onPress: function onPress() {\n              return handleConnection(currentUser);\n            },\n            color: \"white\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: nextUser,\n          children: _jsx(Ionicons, {\n            name: \"arrow-forward-circle\",\n            size: 40,\n            color: \"#000\"\n          })\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10\n  },\n  profileCard: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 10,\n    padding: 20,\n    alignItems: 'center',\n    backgroundColor: '#fff',\n    height: 425,\n    justifyContent: 'space-between',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 10\n    },\n    shadowOpacity: .30,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  fullName: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    textDecorationLine: 'underline',\n    color: '#6DB4CA'\n  },\n  profileSection: {\n    flexDirection: 'row',\n    alignItems: 'flex-start'\n  },\n  profilePic: {\n    width: 100,\n    height: 125,\n    borderRadius: 30,\n    marginRight: 20,\n    bottom: 60,\n    borderWidth: 1,\n    borderColor: '#6DB4CA'\n  },\n  userInfo: {\n    flex: 1,\n    alignContent: 'space-between',\n    bottom: 150,\n    width: 40\n  },\n  connectButton: {\n    backgroundColor: 'black',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 20,\n    bottom: -80\n  },\n  connectButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  navigation: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 20\n  },\n  searchBar: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 10,\n    padding: 10,\n    margin: 10,\n    backgroundColor: 'white'\n  },\n  btnBackground: {\n    backgroundColor: 'black',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 20\n  },\n  backgroundImage: {\n    flex: 1,\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center'\n  },\n  userStuff: {\n    backgroundColor: 'white',\n    padding: 5,\n    margin: 5,\n    borderRadius: 10,\n    borderWidth: 2,\n    borderColor: '#6DB4CA',\n    top: 80\n  }\n});\nexport default MatchingScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","Image","TouchableOpacity","TextInput","ScrollView","Button","ImageBackground","Ionicons","useNavigation","jsx","_jsx","jsxs","_jsxs","global","messages","MatchingScreen","navigation","_useState","id","fullName","profilePic","classes","likes","skills","weaknesses","strengths","_useState2","_slicedToArray","users","setUsers","_useState3","_useState4","searchQuery","setSearchQuery","_useState5","Set","_useState6","connectedUsers","setConnectedUsers","_useState7","_useState8","currentIndex","setCurrentIndex","filteredUsers","filter","user","some","classItem","toLowerCase","includes","currentUser","length","safeIndex","handleConnection","has","concat","_toConsumableArray","push","name","lastMessage","navigate","alert","prevUser","prevIndex","nextUser","console","log","source","require","style","styles","backgroundImage","children","container","searchBar","placeholder","value","onChangeText","text","profileCard","profileSection","uri","userInfo","userStuff","join","onPress","size","color","btnBackground","title","create","flex","padding","borderWidth","borderColor","borderRadius","alignItems","backgroundColor","height","justifyContent","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","elevation","fontSize","fontWeight","textDecorationLine","flexDirection","marginRight","bottom","alignContent","connectButton","paddingVertical","paddingHorizontal","connectButtonText","marginTop","margin","top"],"sources":["C:/Users/Sisi/Documents/GitHub/StudyBuddy/StudyBuddy2.0/src/screens/MatchingScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, Image, TouchableOpacity, TextInput, ScrollView, Button, ImageBackground } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nif (!global.messages) global.messages = [];\r\n\r\nconst MatchingScreen = () => {\r\n  const navigation = useNavigation();\r\n  // Dummy data array for other users. This would be fetched from your backend.\r\n  const [users, setUsers] = useState([\r\n    {\r\n      id: '1',\r\n      fullName: 'Jane Doe',\r\n      profilePic: 'https://via.placeholder.com/150',\r\n      classes: ['Biology 101', 'Chemistry 201'],\r\n      likes: ['Reading', 'Gardening'],\r\n      skills: ['Time Management', 'Organization'],\r\n      weaknesses: ['Public Speaking'],\r\n      strengths: ['Critical Thinking']\r\n    },\r\n\r\n    {\r\n      id: '2',\r\n      fullName: 'John Doe',\r\n      profilePic: 'https://via.placeholder.com/150',\r\n      classes: ['Chemistry 101', 'Software 201'],\r\n      likes: ['Reading', 'Gardening'],\r\n      skills: ['Time Management', 'Organization'],\r\n      weaknesses: ['Public Speaking'],\r\n      strengths: ['Critical Thinking']\r\n    },\r\n\r\n    {\r\n      id: '3',\r\n      fullName: 'Jym Doe',\r\n      profilePic: 'https://via.placeholder.com/150',\r\n      classes: ['Carpentry 101', 'Software 301'],\r\n      likes: ['Reading', 'Gardening'],\r\n      skills: ['Time Management', 'Organization'],\r\n      weaknesses: ['Public Speaking'],\r\n      strengths: ['Critical Thinking']\r\n    },\r\n    // ... other user profiles\r\n  ]);\r\n\r\n\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [connectedUsers, setConnectedUsers] = useState(new Set()); // Track connected users\r\n  // Index to keep track of the current user being displayed.\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n  const filteredUsers = searchQuery\r\n    ? users.filter(user =>\r\n        user.classes.some(classItem =>\r\n          classItem.toLowerCase().includes(searchQuery.toLowerCase())\r\n        )\r\n      )\r\n    : users;\r\n    const currentUser = filteredUsers[currentIndex % filteredUsers.length];\r\n\r\n\r\n  const safeIndex = currentIndex % filteredUsers.length;\r\n  \r\n\r\n  const handleConnection = (user) => {\r\n    if (!connectedUsers.has(user.id)) {\r\n      // Update the connected users set and trigger a re-render\r\n      setConnectedUsers(new Set([...connectedUsers, user.id]));\r\n  \r\n      // Add a new message to global.messages with the user's full name\r\n      global.messages.push({\r\n        id: user.id,\r\n        name: user.fullName,\r\n        lastMessage: `Connected with ${user.fullName}`,\r\n      });\r\n  \r\n      // Optionally navigate to the Messages screen\r\n      navigation.navigate('Messages');\r\n    } else {\r\n      alert(\"You're already connected with this user!\");\r\n    }\r\n  };\r\n  \r\n  \r\n  // Move to the previous user profile.\r\n  const prevUser = () => {\r\n    setCurrentIndex(prevIndex => (prevIndex - 1 + filteredUsers.length) % filteredUsers.length);\r\n  };\r\n\r\n  // Move to the next user profile.\r\n  const nextUser = () => {\r\n    setCurrentIndex(prevIndex => (prevIndex + 1) % filteredUsers.length);\r\n  };\r\n\r\n // UseEffect for debugging\r\n useEffect(() => {\r\n  console.log('Current user:', currentUser);\r\n  console.log('Connected users:', connectedUsers);\r\n}, [currentUser, connectedUsers]);\r\n  \r\n\r\n  // The current user profile to display.\r\n\r\n{/* FIRST BUDDY BADGE FUNCTION WILL GO -- CHECK BUDDY COUNT -- CAN CALL OUT OF FOLDER */}\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={require('./images/Matching.png')} // Replace with your image path\r\n      style={styles.backgroundImage}\r\n    >\r\n    <ScrollView style={styles.container}>\r\n      {/* Search Bar */}\r\n      <TextInput\r\n        style={styles.searchBar}\r\n        placeholder=\"Search for classes...\"\r\n        value={searchQuery}\r\n        onChangeText={text => {\r\n          setSearchQuery(text);\r\n          setCurrentIndex(0); // Reset to the first user in the filtered list\r\n        }}\r\n      />\r\n\r\n      {currentUser && (\r\n      <View style={styles.profileCard}>\r\n        <Text style={styles.fullName}>{currentUser.fullName}</Text>\r\n        <View style={styles.profileSection}>\r\n          <Image source={{ uri: currentUser.profilePic }} style={styles.profilePic} />\r\n          <View style={styles.userInfo}>\r\n            <Text style = {styles.userStuff}>Classes: {currentUser.classes.join(', ')}</Text>\r\n            <Text style = {styles.userStuff}>Likes: {currentUser.likes.join(', ')}</Text>\r\n            <Text style = {styles.userStuff}>Skills: {currentUser.skills.join(', ')}</Text>\r\n            <Text style = {styles.userStuff}>Weaknesses: {currentUser.weaknesses.join(', ')}</Text>\r\n            <Text style = {styles.userStuff}>Strengths: {currentUser.strengths.join(', ')}</Text>\r\n          </View>\r\n        </View>\r\n\r\n\r\n        \r\n\r\n        {/* <TouchableOpacity \r\n    style={styles.connectButton}\r\n    onPress={() => handleConnection(currentUser)} // Pass the entire currentUser object\r\n>\r\n    <Text style={styles.connectButtonText}>Connect</Text>\r\n</TouchableOpacity> */}\r\n{/* <View style = {styles.connectButton}> */}\r\n  {/* <Button\r\n    title=\"Connect\"\r\n    onPress={() => handleConnection(currentUser)}\r\n    color=\"black\" // This will set the text color\r\n  /> */}\r\n{/* </View> */}\r\n\r\n\r\n\r\n\r\n\r\n        \r\n      </View>\r\n)} \r\n\r\n      {/* Navigation arrows */}\r\n      {filteredUsers.length > 1 && ( // Only show navigation if there are users to navigate through\r\n        <View style={styles.navigation}>\r\n          <TouchableOpacity onPress={prevUser}>\r\n            <Ionicons name=\"arrow-back-circle\" size={40} color=\"#000\" />\r\n          </TouchableOpacity>\r\n\r\n          <View style = {styles.btnBackground}>\r\n          <Button\r\n          title=\"Connect\"\r\n          onPress={() => handleConnection(currentUser)}\r\n          color=\"white\" // This will set the text color\r\n        />\r\n        </View>\r\n\r\n          <TouchableOpacity onPress={nextUser}>\r\n            <Ionicons name=\"arrow-forward-circle\" size={40} color=\"#000\" />\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n\r\n    </ScrollView>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 10,\r\n  },\r\n  profileCard: {\r\n    borderWidth: 1,\r\n    borderColor: '#ddd',\r\n    borderRadius: 10,\r\n    padding: 20,\r\n    alignItems: 'center',\r\n    backgroundColor: '#fff',\r\n    height: 425,\r\n    justifyContent: 'space-between', // This will distribute the children evenly\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 10 },\r\n    shadowOpacity: .30,\r\n    shadowRadius: 3.84,\r\n\r\n    // Elevation for Android\r\n    elevation: 5,\r\n    \r\n  },\r\n  fullName: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    textDecorationLine: 'underline',\r\n    color: '#6DB4CA'\r\n  },\r\n  profileSection: {\r\n    flexDirection: 'row',\r\n    alignItems: 'flex-start',\r\n  },\r\n  profilePic: {\r\n    width: 100,\r\n    height: 125,\r\n    borderRadius: 30,\r\n    marginRight: 20,\r\n    bottom: 60,\r\n    borderWidth:1,\r\n    borderColor: '#6DB4CA'\r\n  },\r\n  userInfo: {\r\n    flex: 1,\r\n     // Allow text to wrap within the container\r\n    alignContent: 'space-between', // Evenly distribute wrapped lines\r\n    bottom: 150,\r\n    // size: 50,\r\n    width: 40,\r\n  },\r\n  connectButton: {\r\n    backgroundColor: 'black',\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 20,\r\n    bottom: -80 // Stretch button to match the parent's width\r\n    // Remove bottom: -270 if you are using justifyContent: 'space-between'\r\n    \r\n  },\r\n\r\n  connectButtonText: {\r\n    color: 'white', // Here you can put any color you want for the font\r\n    fontSize: 16, // You can adjust the font size as needed\r\n    fontWeight: 'bold', // Optional: if you want the text to be bold\r\n    // ... any other text styling you need\r\n  },\r\n  navigation: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginTop: 20,\r\n   \r\n  },\r\n\r\n  searchBar: {\r\n    borderWidth: 1,\r\n    borderColor: '#ddd',\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    margin: 10,\r\n    backgroundColor: 'white',\r\n  },\r\n  btnBackground: {\r\n    backgroundColor: 'black',\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 20,\r\n \r\n  },\r\n  backgroundImage: {\r\n    flex: 1,\r\n    width: '100%',\r\n    height: '100%',\r\n    justifyContent: 'center',\r\n  },\r\n  userStuff:{\r\n    backgroundColor: 'white',\r\n    padding: 5,\r\n    margin: 5,\r\n    borderRadius: 10,\r\n    borderWidth: 2,\r\n    borderColor: '#6DB4CA',\r\n    top: 80,\r\n    \r\n  },\r\n  // ... additional styles as needed\r\n});\r\n\r\nexport default MatchingScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}